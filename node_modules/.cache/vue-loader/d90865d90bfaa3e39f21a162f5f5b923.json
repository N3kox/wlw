{"remainingRequest":"/Users/mac/Desktop/wlw/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/wlw/src/views/init.vue?vue&type=style&index=0&id=a8a4a7ac&scoped=true&lang=css&","dependencies":[{"path":"/Users/mac/Desktop/wlw/src/views/init.vue","mtime":1619420090575},{"path":"/Users/mac/Desktop/wlw/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/wlw/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mac/Desktop/wlw/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/wlw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/wlw/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmVsLWNvbnRhaW5lciB7DQogIGhlaWdodDogMTAwJTsNCn0NCg0KLmVsLWhlYWRlciwNCi5lbC1mb290ZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNjMGQxOw0KICBjb2xvcjogIzMzMzsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBsaW5lLWhlaWdodDogNjBweDsNCn0NCg0KLmVsLWFzaWRlIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2QzZGNlNjsNCiAgY29sb3I6ICMzMzM7DQp9DQoNCi5lbC1tYWluIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWVmMzsNCiAgY29sb3I6ICMzMzM7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgbGluZS1oZWlnaHQ6IDE2MHB4Ow0KfQ0KDQouZWwtbWVudSB7DQogIGJhY2tncm91bmQtY29sb3I6ICNkM2RjZTY7DQp9DQoNCmh0bWwsDQpib2R5LA0KI2FwcCB7DQogIGhlaWdodDogMTAwJTsNCiAgbWFyZ2luOiAwcHg7DQogIHBhZGRpbmc6IDBweDsNCn0NCg0KLmRhdGFfYmxvY2sgew0KICBoZWlnaHQ6IDgwcHg7DQogIHdpZHRoOiA5MCU7DQogIG1hcmdpbjogMTBweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogc2FuZHlicm93bjsNCn0NCg0KLnR5cGVfYV9hcmVhIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwMSwgMTg0LCAxMDEpOw0KfQ0KDQoudHlwZV9iX2FyZWEgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiBhbnRpcXVld2hpdGU7DQp9DQo="},{"version":3,"sources":["init.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+RA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"init.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"app\">\r\n    <el-container>\r\n      <el-aside width=\"400px\">\r\n        <el-popover placement=\"top\" width=\"250\" v-model=\"popVisible\">\r\n          <p>\r\n            选择\r\n            {{ toBeAggregateId >= 0 ? fromBackend[toBeAggregateId].name : \"\" }}\r\n            移动目标\r\n          </p>\r\n          <div style=\"text-align: right; margin: 0\">\r\n            <el-button\r\n              v-for=\"name in sqlFunc\"\r\n              :key=\"name\"\r\n              type=\"primary\"\r\n              size=\"mini\"\r\n              @click=\"addAggregate(name)\"\r\n              >{{ name }}</el-button\r\n            >\r\n            <el-button size=\"mini\" type=\"text\" @click=\"popVisible = false\"\r\n              >取消</el-button\r\n            >\r\n          </div>\r\n        </el-popover>\r\n        <div class=\"data_block\" v-for=\"v in fromBackend\" :key=\"v.id\">\r\n          {{ v.name }}\r\n          <el-button\r\n            type=\"success\"\r\n            icon=\"el-icon-view\"\r\n            circle\r\n            @click=\"addGroupByItem(v.id)\"\r\n          ></el-button>\r\n          <el-button\r\n            type=\"success\"\r\n            icon=\"el-icon-plus\"\r\n            circle\r\n            @click=\"aggregateChoose(v.id)\"\r\n          ></el-button>\r\n        </div>\r\n      </el-aside>\r\n      <el-container>\r\n        <!-- <el-header>Header</el-header> -->\r\n        <el-main>\r\n          <div class=\"type_a_area\">\r\n            group by\r\n            <el-tag\r\n              v-for=\"item in setA\"\r\n              :key=\"item.id\"\r\n              closable\r\n              type=\"info\"\r\n              @close=\"groupByHandleClose(item)\"\r\n            >\r\n              {{ item.name }}\r\n            </el-tag>\r\n          </div>\r\n\r\n          <div class=\"type_b_area\">\r\n            aggregate by\r\n            <el-tag\r\n              v-for=\"item in setB\"\r\n              :key=\"item.showName\"\r\n              closable\r\n              :disable-transitions=\"false\"\r\n              @close=\"aggregateByHandleClose(item)\"\r\n            >\r\n              {{ item.showName }}\r\n            </el-tag>\r\n          </div>\r\n          <el-button type=\"success\" @click=\"requestSearchResult\"\r\n            >查 询</el-button\r\n          >\r\n          <el-button type=\"success\" @click=\"navigateTo\">echars跳转</el-button>\r\n        </el-main>\r\n        <div id=\"myChart\" :style=\"{ width: '300px', height: '300px' }\"></div>\r\n      </el-container>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default {\r\n  data: () => ({\r\n    fromBackend: [\r\n      // {\r\n      //   id: 0,\r\n      //   name: \"hello\",\r\n      //   val: 3,\r\n      // },\r\n      // {\r\n      //   id: 1,\r\n      //   name: \"what\",\r\n      //   val: 4,\r\n      // },\r\n    ],\r\n    toBeAggregateId: -1,\r\n    popVisible: false,\r\n    setA: [],\r\n    setB: [],\r\n    sqlFunc: [\"sum\", \"count\", \"average\"],\r\n    selfAppendId: 0,\r\n  }),\r\n  methods: {\r\n    searchIndexById(id, list) {\r\n      for (let i = 0; i < list.length; i++) {\r\n        if (list[i].id == id) return i;\r\n      }\r\n      return -1;\r\n    },\r\n    addGroupByItem(id) {\r\n      let index = this.searchIndexById(id, this.fromBackend);\r\n      if (index >= 0 && this.searchIndexById(id, this.setA) == -1) {\r\n        this.setA.push(this.fromBackend[index]);\r\n        // this.$message(\"Add Group By Item OK!\");\r\n      }\r\n    },\r\n    groupByHandleClose(item) {\r\n      let index = this.searchIndexById(item.id, this.setA);\r\n      window.console.log(index);\r\n      if (index >= 0) {\r\n        this.setA.splice(index, 1);\r\n      }\r\n    },\r\n    addAggregate(name) {\r\n      let item = JSON.parse(\r\n        JSON.stringify(this.fromBackend[this.toBeAggregateId])\r\n      );\r\n      item.showName = name + \"(\" + item.name + \")\";\r\n      item.func = name;\r\n      this.popVisible = false;\r\n      let i = 0;\r\n      for (i = 0; i < this.setB.length; i++) {\r\n        if (this.setB[i].id == item.id && this.setB[i].func == item.func) {\r\n          break;\r\n        }\r\n      }\r\n      if (i == this.setB.length) {\r\n        this.setB.push(item);\r\n      }\r\n      this.toBeAggregateId = -1;\r\n    },\r\n    aggregateChoose(id) {\r\n      this.toBeAggregateId = id;\r\n      this.popVisible = true;\r\n    },\r\n    aggregateByHandleClose(item) {\r\n      window.console.log(item);\r\n      let index = this.setB.indexOf(item);\r\n      if (index >= 0) {\r\n        this.setB.splice(index, 1);\r\n      }\r\n    },\r\n    parseImension() {\r\n      let res = [];\r\n      for (let i = 0; i < this.setA.length; i++) {\r\n        res.push(this.setA[i].name);\r\n      }\r\n      return res;\r\n    },\r\n    parseQueryResult() {\r\n      let res = [];\r\n      for (let i = 0; i < this.setB.length; i++) {\r\n        let item = {};\r\n        item.field = this.setB[i].name;\r\n        item.aggregate_function = this.setB[i].func;\r\n        res.push(item);\r\n      }\r\n      return res;\r\n    },\r\n    // http request\r\n    requestSearchResult() {\r\n      let that = this\r\n      let requestBody = {};\r\n      requestBody.table_name = \"test.income\";\r\n      requestBody.imension = this.parseImension();\r\n      requestBody.query_result = this.parseQueryResult();\r\n      // window.console.log(JSON.stringify(requestBody));\r\n      if(request.imension.length == 0){\r\n        this.$message.error(\"imension 不能为空\")\r\n      }else if(requestBody.query_result.length == 0){\r\n        this.$message.error(\"query 不能为空\")\r\n      }else{\r\n        this.$axios.post(that.patchUrl(`normal_query`), JSON.stringify(requestBody), { emulateJSON: true })\r\n        .then(function(res){\r\n          window.console.log(res)\r\n        }).catch(function(err){\r\n          window.console.log(err);\r\n        })\r\n        \r\n      }\r\n\r\n      \r\n      //let that = this;\r\n      // that.$http\r\n      //   .get(this.patchUrl(``))\r\n      //   .then((response) => {\r\n      //     if ((response.data = null || response.ok == false)) {\r\n      //       that.$message.error(\"Error\");\r\n      //     } else {\r\n      //       window.console.log(JSON.parse(response.bodyText));\r\n      //     }\r\n      //   });\r\n    },\r\n    navigateTo() {\r\n      // let that = this\r\n      this.$router.push({\r\n        path: \"./ec\",\r\n        name: \"ec\",\r\n        params: {\r\n          // node : that.nodeDetail\r\n        },\r\n      });\r\n    },\r\n    init() {\r\n\r\n      // 基于准备好的dom，初始化echarts实例\r\n      let myChart = echarts.init(document.getElementById(\"myChart\"));\r\n      // 绘制图表\r\n      // TODO\r\n      myChart.setOption({\r\n        title: {\r\n          text: \"wlw_title\",\r\n          link: \"https://www.baidu.com\",\r\n          textStyle: {\r\n            color: \"red\",\r\n          },\r\n        },\r\n        xAxis: {\r\n          type: \"category\", //类目轴\r\n          data: [\"小明\", \"小红\", \"小王\"],\r\n        },\r\n        yAxis: {\r\n          type: \"value\", // 数值轴\r\n        },\r\n        series: [\r\n          {\r\n            name: \"语文\",\r\n            type: \"bar\",\r\n            data: [100, 90, 80],\r\n          },\r\n          {\r\n            name: \"数学\",\r\n            type: \"line\",\r\n            data: [100, 90, 80],\r\n          },\r\n        ],\r\n      });\r\n    },\r\n    getSelfAppendId(){\r\n      let cur = this.selfAppendId\r\n      this.selfAppendId++\r\n      return cur\r\n    },\r\n    loadData() {\r\n      let that = this;\r\n      this.$axios({\r\n        method: \"get\",\r\n        url: this.patchUrl(\"get_all_filed?table_name=test.income\"),\r\n      })\r\n        .then(function (res) {\r\n          // window.console.log(res)\r\n          if(res.data == null || res.statusText != \"OK\"){\r\n            that.$message.error(\"初始化请求数据失败,请刷新重试\")\r\n          }else{\r\n            // let data = JSON.parse(res.data);\r\n            for(let i = 0; i < res.data.length; i++){\r\n              let item = {}\r\n              item.name = res.data[i]\r\n              item.id = that.getSelfAppendId()\r\n              that.fromBackend.push(item)\r\n            }\r\n          }\r\n        })\r\n        .catch(function (err) {\r\n          window.console.log(err);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadData();\r\n    this.init();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-container {\r\n  height: 100%;\r\n}\r\n\r\n.el-header,\r\n.el-footer {\r\n  background-color: #b3c0d1;\r\n  color: #333;\r\n  text-align: center;\r\n  line-height: 60px;\r\n}\r\n\r\n.el-aside {\r\n  background-color: #d3dce6;\r\n  color: #333;\r\n}\r\n\r\n.el-main {\r\n  background-color: #e9eef3;\r\n  color: #333;\r\n  text-align: center;\r\n  line-height: 160px;\r\n}\r\n\r\n.el-menu {\r\n  background-color: #d3dce6;\r\n}\r\n\r\nhtml,\r\nbody,\r\n#app {\r\n  height: 100%;\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n\r\n.data_block {\r\n  height: 80px;\r\n  width: 90%;\r\n  margin: 10px;\r\n  background-color: sandybrown;\r\n}\r\n\r\n.type_a_area {\r\n  background-color: rgb(101, 184, 101);\r\n}\r\n\r\n.type_b_area {\r\n  background-color: antiquewhite;\r\n}\r\n</style>"]}]}